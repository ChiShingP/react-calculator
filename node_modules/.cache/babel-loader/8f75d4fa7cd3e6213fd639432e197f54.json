{"ast":null,"code":"import _slicedToArray from \"/Users/cxp/Developement/react-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/cxp/Developement/react-calculator/src/Components/MusicControl.jsx\";\n\nimport React, { useState, useEffect } from \"react\"; //https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\n//Play different music based on ans\n\nfunction MusicControl(url) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      music = _useState2[0],\n      playMusic = _useState2[1];\n\n  var _useState3 = useState(new Audio(props)),\n      _useState4 = _slicedToArray(_useState3, 1),\n      song = _useState4[0];\n\n  var toggle = function toggle() {\n    return playMusic(!music);\n  };\n\n  useEffect(function () {\n    music ? song.play() : song.pause();\n  }, [song]);\n  useEffect(function () {\n    song.addEventListener('ended', function () {\n      return playMusic(false);\n    });\n    return function () {\n      song.removeEventListener('ended', function () {\n        return playMusic(false);\n      });\n    };\n  }, []);\n  return [music, toggle];\n}\n\n;\n\nvar Player = function Player(_ref) {\n  var url = _ref.url;\n\n  var _MusicControl = MusicControl(props),\n      _MusicControl2 = _slicedToArray(_MusicControl, 2),\n      music = _MusicControl2[0],\n      toggle = _MusicControl2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"buton\", {\n    type: \"button\",\n    class: \"btn btn-secondary btn-sizing\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, music ? \"Pause\" : \"Play\"));\n};\n\nexport default MusicControl;","map":{"version":3,"sources":["/Users/cxp/Developement/react-calculator/src/Components/MusicControl.jsx"],"names":["React","useState","useEffect","MusicControl","url","music","playMusic","Audio","props","song","toggle","play","pause","addEventListener","removeEventListener","Player"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;;AACA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAAA,kBACIH,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,MAChBI,KADgB;AAAA,MACTC,SADS;;AAAA,mBAERL,QAAQ,CAAC,IAAIM,KAAJ,CAAUC,KAAV,CAAD,CAFA;AAAA;AAAA,MAEhBC,IAFgB;;AAGvB,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMJ,SAAS,CAAC,CAACD,KAAF,CAAf;AAAA,GAAf;;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,KAAK,GAAGI,IAAI,CAACE,IAAL,EAAH,GAAiBF,IAAI,CAACG,KAAL,EAAtB;AACH,GAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,IAAI,CAACI,gBAAL,CAAsB,OAAtB,EAA+B;AAAA,aAAMP,SAAS,CAAC,KAAD,CAAf;AAAA,KAA/B;AACA,WAAO,YAAM;AACTG,MAAAA,IAAI,CAACK,mBAAL,CAAyB,OAAzB,EAAkC;AAAA,eAAMR,SAAS,CAAC,KAAD,CAAf;AAAA,OAAlC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACD,KAAD,EAAQK,MAAR,CAAP;AACH;;AAAA;;AACD,IAAMK,MAAM,GAAG,SAATA,MAAS,OAAa;AAAA,MAAVX,GAAU,QAAVA,GAAU;;AAAA,sBACAD,YAAY,CAACK,KAAD,CADZ;AAAA;AAAA,MACjBH,KADiB;AAAA,MACVK,MADU;;AAGxB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,8BAA3B;AAA0D,IAAA,OAAO,EAAEA,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4EL,KAAK,GAAG,OAAH,GAAa,MAA9F,CADJ,CADJ;AAKH,CARD;;AAWA,eAAeF,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\n//https://stackoverflow.com/questions/47686345/playing-sound-in-reactjs\n//Play different music based on ans\nfunction MusicControl(url) {\n    const [music, playMusic] = useState(false);\n    const [song] = useState(new Audio(props));\n    const toggle = () => playMusic(!music);\n\n    useEffect(() => {\n        music ? song.play() : song.pause();\n    }, [song]\n    );\n    useEffect(() => {\n        song.addEventListener('ended', () => playMusic(false));\n        return () => {\n            song.removeEventListener('ended', () => playMusic(false));\n        };\n    }, []);\n\n    return [music, toggle];\n};\nconst Player = ({ url }) => {\n    const [music, toggle] = MusicControl(props);\n\n    return (\n        <div>\n            <buton type=\"button\" class=\"btn btn-secondary btn-sizing\" onClick={toggle}>{music ? \"Pause\" : \"Play\"}</buton>\n        </div>\n    );\n};\n\n\nexport default MusicControl;"]},"metadata":{},"sourceType":"module"}