{"version":3,"sources":["Components/Header.jsx","Components/HistoryPopUp.jsx","Components/Calcluator.jsx","Components/Footer.jsx","Components/App.jsx","index.js"],"names":["Header","props","react_default","a","createElement","title","MyVerticallyCenteredModal","Modal","Object","assign","size","aria-labelledby","centered","Body","history","map","thisItem","Button","className","variant","onClick","onHide","HistoryPopUp","_useState","useState","_useState2","slicedToArray","modalShow","setModalShow","Fragment","type","show","Calculator","inputs","setInputs","_useState3","_useState4","storedInput","setStoredInput","_useState5","_useState6","storedOperator","setStoredOperator","_useState7","_useState8","setHisotry","calculatedValue","updateInput","event","value","currentTarget","updateOperator","target","Container","fluid","Row","Col","disabled","xs","Components_HistoryPopUp","substr","length","includes","Math","floor","random","setHeaderTitle","parseFloat","prevValue","concat","toConsumableArray","console","log","updateCalculate","setTimeout","Footer","year","Date","getFullYear","App","headTitle","setTitle","Components_Header","Calcluator","Components_Footer","rootElement","document","getElementById","ReactDOM","render","Components_App"],"mappings":"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","file":"static/js/main.c02caa66.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>{props.title}</h1>\n      {/* Animation of a Beignet inflating and deflating based on saving */}\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\"\n\nfunction MyVerticallyCenteredModal(props) {\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            {/* <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                </Modal.Title>\n            </Modal.Header> */}\n            <Modal.Body>\n\n                {props.history.map(thisItem => {\n                    return <p>{thisItem}</p>;\n                })}\n                <Button className=\"btn-close-modal\" variant=\"outline-light\" onClick={props.onHide}>Close</Button>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nfunction HistoryPopUp(props) {\n    const [modalShow, setModalShow] = useState(false);\n    function handleClick() {\n        setModalShow(true);\n    }\n\n    return (\n        <>\n            <Button\n                type=\"button\"\n                className=\"btn-sizing\"\n                variant=\"outline-light\"\n                onClick={handleClick}\n            >\n                M\n          </Button>\n\n            <MyVerticallyCenteredModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                history={props.history}\n            />\n        </>\n    );\n}\n\n\nexport default HistoryPopUp;","import React, { useState } from \"react\";\n\nimport HistoryPopUp from \"./HistoryPopUp\";\nimport Container from \"react-bootstrap/container\"\nimport Col from 'react-bootstrap/Col'\nimport Button from \"react-bootstrap/Button\"\nimport Row from \"react-bootstrap/Row\"\n\n\nfunction Calculator(props) {\n    const [inputs, setInputs] = useState(\"\");\n    const [storedInput, setStoredInput] = useState(\"\");\n    const [storedOperator, setStoredOperator] = useState(\"\");\n    const [history, setHisotry] = useState([]);\n\n    var calculatedValue = \"\";\n    // const songURL = \"./assets/SD.mp3\";\n    function updateInput(event) {\n        const { value } = event.currentTarget; //event.currenTarget for Material UI buttons\n        setInputs(inputs + value);\n    }\n\n    function clearInput() {\n        setInputs(\"\");\n        setStoredInput(\"\");\n        setStoredOperator(\"\");\n    }\n\n    function updateOperator(event) {\n        const { value } = event.target;\n        !(inputs === \"\") && setStoredInput(inputs); //Stores the first number if user had entered a number\n        setStoredOperator(value);\n        setInputs(\"\");\n    }\n\n    function decimalCount() {\n        (!inputs.includes(\".\")) && (setInputs(inputs + \".\"));\n\n    }\n\n    //what if operation was pressed before?\n    function clearEntry() {\n        setInputs(inputs.substr(0, inputs.length - 1));\n    }\n    function decideCalculate() {\n        let r = Math.floor(Math.random() * 10);\n        if (r < 3) {\n            props.setHeaderTitle(\"But I dont feel like it right now.\");\n        } else {\n            updateCalculate();\n            props.setHeaderTitle(\"Here you go.\");\n\n            setTimeout(() => {\n                props.setHeaderTitle(\"Hi again, how may I help you!\")\n            }, 3000);\n            // } else {\n            //     setTimeout(() => {\n            //         props.setHeaderTitle(\"Really? You can't do these simple math in your head?\")\n            //     }, 3000);\n\n\n        }\n    }\n    function updateCalculate() {\n        switch (storedOperator) {\n            case \"/\":\n                calculatedValue = (\n                    parseFloat(storedInput, 10) / parseFloat(inputs, 10)\n                )\n                break;\n            case \"*\":\n                calculatedValue = (\n                    parseFloat(storedInput, 10) * parseFloat(inputs, 10)\n                )\n                break;\n            case \"-\":\n                calculatedValue = (\n                    parseFloat(storedInput, 10) - parseFloat(inputs, 10)\n                )\n                break;\n            case \"+\":\n                calculatedValue = (\n                    parseFloat(storedInput, 10) + parseFloat(inputs, 10)\n                )\n                break;\n            default:\n                calculatedValue = inputs;\n        }\n        // if (String(calculatedValue).length > 10) {\n        //   (storedOperator !== \"\") && (calculatedValue = calculatedValue.toExponential(8));\n        // }\n        setHisotry((prevValue) => [...prevValue, calculatedValue]);\n        console.log(\"History Stored: \" + history);\n        setInputs(calculatedValue);\n        console.log(typeof (inputs) + \"Value: \" + inputs)\n        setStoredInput(calculatedValue);\n        setStoredOperator(\"\");\n    }\n\n    return (\n        <Container fluid className=\"container\">\n            <Row className=\"displayShadow\">\n                <Col className=\"padding-0 displayBlur\">\n                    <input\n                        className=\"input-calcdisplay form-control\"\n                        type=\"text\"\n                        value={inputs}\n                        disabled\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={3} className=\"padding-0\" >\n                    <HistoryPopUp\n                        history={history}\n                    />\n                </Col>\n                <Col xs={6} className=\"padding-0\" >\n                    <Button\n                        className=\"btn-sizing\" onClick={clearInput}\n                        variant=\"outline-light\"\n                    >\n                        CLEAR\n            </Button>\n                </Col>\n                <Col xs={3} className=\"padding-0\">\n                    <Button\n                        type=\"Button\"\n                        variant=\"outline-light\"\n\n                        className=\"btn btn-primary btn-sizing\"\n                        onClick={clearEntry}\n                    >\n                        CE\n            </Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        variant=\"outline-light\"\n\n                        type=\"Button\"\n                        className=\"btn btn-sizing\"\n\n\n\n                        value=\"7\"\n\n                        onClick={updateInput}\n                    >\n                        7\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n                        value=\"8\"\n                        variant=\"outline-light\"\n                        onClick={updateInput}\n                    >\n                        8\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\" btn-sizing\"\n                        variant=\"outline-light\"\n                        value=\"9\"\n\n                        onClick={updateInput}\n                    >\n                        9\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn btn-sizing\"\n\n                        variant=\"outline-light\"\n                        value=\"/\"\n\n                        onClick={updateOperator}\n                    >\n                        /\n            </Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"  btn-sizing\"\n                        variant=\"outline-light\"\n\n\n                        value=\"4\"\n\n                        onClick={updateInput}\n                    >\n                        4\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\" btn-sizing\"\n\n                        variant=\"outline-light\"\n\n                        value=\"5\"\n\n                        onClick={updateInput}\n                    >\n                        5\n            </Button>\n                </Col>\n                <Col xs={3} className=\"padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\" btn-sizing\"\n\n\n                        variant=\"outline-light\"\n                        value=\"6\"\n\n                        onClick={updateInput}\n                    >\n                        6\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\" btn-sizing\"\n                        variant=\"outline-light\"\n\n                        value=\"*\"\n\n                        onClick={updateOperator}\n                    >\n                        *\n            </Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\" btn-sizing\"\n\n                        variant=\"outline-light\"\n\n                        value=\"1\"\n\n                        onClick={updateInput}\n                    >\n                        1\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n\n                        variant=\"outline-light\"\n\n                        value=\"2\"\n\n                        onClick={updateInput}\n                    >\n                        2\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n\n                        variant=\"outline-light\"\n\n                        value=\"3\"\n\n                        onClick={updateInput}\n                    >\n                        3\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n\n                        variant=\"outline-light\"\n                        value=\"-\"\n\n                        onClick={updateOperator}\n                    >\n                        -\n            </Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n\n\n                        variant=\"outline-light\"\n                        value=\"0\"\n\n                        onClick={updateInput}\n                    >\n                        0\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n\n                        variant=\"outline-light\"\n\n                        value=\".\"\n\n                        onClick={decimalCount}\n                    >\n                        .\n            </Button>\n                </Col>\n                <Col xs={3} className=\" padding-0\"></Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing \"\n                        value=\"+\"\n                        variant=\"outline-light\"\n                        onClick={updateOperator}\n                    >\n                        +\n            </Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={3} className=\" padding-0\">\n                </Col>\n                <Col xs={3} className=\" padding-0\"></Col>\n                <Col xs={3} className=\" padding-0\"></Col>\n                <Col xs={3} className=\" padding-0\">\n                    <Button\n                        type=\"Button\"\n                        className=\"btn-sizing\"\n\n                        variant=\"outline-light\"\n                        value=\"=\"\n                        onClick={decideCalculate}\n                    >\n                        =\n            </Button>\n                </Col>\n            </Row>\n            <Row></Row>\n        </Container>\n    );\n}\n\nexport default Calculator;","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright ⓒ - {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\n\n\nimport Header from \"./Header\"\nimport Calculator from \"./Calcluator\"\nimport Footer from \"./Footer\"\n/*\n1. Display a calculator\n  - Show a display window\n  - Show all buttons\n\n2. Capture input from said calculator\n2.a. Update the display from input\n2.b. Process the input\n\n*/\n\nfunction App() {\n  const [headTitle, setTitle] = useState(\"Hello! How may I help you?\");\n  return (\n    // <div className=\"container-fluid container\"> </div>\n    <div className=\"mainWrapper\">\n      <Header title={headTitle} />\n      <Calculator setHeaderTitle={setTitle} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./Components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}